var mainApp=angular.module("mainApp",["ngRoute"]);mainApp.config(["$routeProvider",function(a){a.when("/addStudent",{templateUrl:"client/app/add/addStudent.jsp",controller:"AddStudentController",controllerAs:"ctrl"}).when("/viewStudent",{templateUrl:"client/app/view/view.jsp",controller:"ViewStudentController",controllerAs:"view"}).when("/modifyStudent",{templateUrl:"client/app/modify/modifyStudent.jsp",controller:"ModifyStudentController",controllerAs:"modify"}).when("/slider",{templateUrl:"app/slider/slider.jsp",controller:"SliderController"})}]),mainApp.directive("jqSlider",[function(){return{restrict:"A",scope:{model:"="},link:function(a,b,c){$(b).slider({value:+a.model,min:+c.min,max:+c.max,step:+c.step,slide:function(b,c){a.$apply(function(){a.model=c.value})}})}}}]),mainApp.controller("AddStudentController",["$scope","AddStudentService",function(a,b){var c=this;c.student={name:"",age:null,id:null},c.submitDetails=function(){b.createStudent(c.student).then(function(a){console.log("creating Student successfully")},function(a){console.error("Error while creating Student")}),c.resetDetails()},c.resetDetails=function(){c.student={name:"",age:null,id:null},a.studentForm.$setPristine()}}]),mainApp.service("AddStudentService",["$http","$q",function(a,b){this.createStudent=function(c){var d=b.defer();return a.post("add",c).then(function(a){d.resolve(a.data)},function(a){console.error("Error while creating Student"),d.reject(a)}),d.promise}}]),mainApp.controller("ModifyStudentController",["$scope","ModifyStudentService","ViewStudentService",function(a,b,c){function d(){var a=c.getData();e.student.name=a.name,e.student.age=a.age,e.student.id=a.id}var e=this;e.student={name:"",age:null,id:null},d(),e.updateDetails=function(){b.updateStudent(e.student,e.student.id).then(function(a){console.log("updating Student successfully")},function(a){console.error("Error while updating Student")}),e.student={name:"",age:null,id:null},a.studentForm.$setPristine()}}]),mainApp.service("ModifyStudentService",["$http","$q",function(a,b){var c=[];this.setData=function(a){c=a},this.getData=function(){return c},this.updateStudent=function(c,d){var e=b.defer();return a.put("update/"+d,c).then(function(a){e.resolve(a.data)},function(a){console.error("Error while editing Student"),e.reject(a)}),e.promise}}]),mainApp.controller("SliderController",["$scope",function(a){a.sliderValue=50}]),mainApp.controller("ViewStudentController",["$scope","ViewStudentService",function(a,b){function c(){b.fetchAllStudents().then(function(a){d.students=a},function(a){console.error("Error while fetching Students")})}var d=this;d.students=[],c(),d.edit=function(a,c){b.setData(c)},d.removeDetails=function(a){b.deleteStudent(a).then(function(a){d.students=a,console.log("delete Student successfully")},function(a){console.error("Error while deleting Student")})}}]),mainApp.service("ViewStudentService",["$http","$q",function(a,b){var c=[];this.setData=function(a){c=a},this.getData=function(){return c},this.fetchAllStudents=function(){var c=b.defer();return a.get("view").then(function(a){c.resolve(a.data)},function(a){console.error("Error while fetching Students"),c.reject(a)}),c.promise},this.deleteStudent=function(c){var d=b.defer();return a.delete("delete/"+c.id).then(function(a){d.resolve(a.data)},function(a){console.error("Error while deleting Student"),d.reject(a)}),d.promise}}]);
